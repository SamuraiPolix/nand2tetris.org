// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // Put your code here:
	// It's a bit confusing because the sel[0] is the LSB and sel[2] is the MSB
	// The 1st DMux determines if the input will go to AB or CD using the MSB of sel.
	// Than, the LSB of sel will decide inside the last 2 DMux's which way to let the imput go, wherever it goes, the other output will just be 0.
	DMux(in=in, sel=sel[1], a=outAB, b=outCD);
	DMux(in=outAB, sel=sel[0], a=a, b=b);
	DMux(in=outCD, sel=sel[0], a=c, b=d);
}